---
title: Web Appendix for "A separate way to measure rate of return"
warning: false
message: false
format: html
output-dir: ./quarto_output
---

```{r}
#| echo: false
library(tidyverse)
library(latex2exp)
library(ggplot2)
sw_data <- read_csv("../data/sw_data.csv")

theme_Publication <- function(base_size = 14, ...) {
    library(grid)
    library(ggthemes)
    library(ggtext)
    (theme_foundation(base_size = base_size)
    + theme(
            plot.title = element_text(
                face = "bold",
                size = rel(1.2), hjust = 0.5
            ),
            plot.subtitle = element_markdown(size = rel(1), hjust = 0.5),
            plot.caption = element_markdown(size = rel(0.7), color = "grey"),
            text = element_text(),
            panel.background = element_rect(colour = NA),
            plot.background = element_rect(colour = NA),
            panel.border = element_rect(colour = NA),
            axis.title = element_markdown(face = "bold", size = rel(1)),
            axis.title.y = element_text(angle = 0, vjust = 0.5),
            axis.title.x = element_markdown(vjust = -0.2),
            axis.text = element_markdown(),
            axis.line = element_line(colour = "black"),
            axis.ticks = element_line(),
            panel.grid.major = element_line(colour = "#f0f0f0"),
            panel.grid.minor = element_blank(),
            legend.key = element_rect(colour = NA),
            legend.position = "bottom",
            legend.direction = "horizontal",
            legend.key.size = unit(0.2, "cm"),
            legend.margin = margin(0, "cm"),
            legend.title = element_markdown(face = "italic"),
            plot.margin = margin(c(10, 5, 5, 5), "mm"),
            strip.background = element_rect(colour = "#f0f0f0", fill = "#f0f0f0"),
            strip.text = element_markdown(face = "bold"),
        ))
}
scale_fill_Publication <- function(...) {
    library(scales)
    discrete_scale(
        "fill", "Publication",
        manual_pal(values = c("#386cb0", "#fdb462", "#7fc97f", "#ef3b2c", "#662506", "#a6cee3", "#fb9a99", "#984ea3", "#ffff33")), ...
    )
}

scale_colour_Publication <- function(...) {
    library(scales)
    discrete_scale(
        "colour", "Publication",
        manual_pal(values = c("#386cb0", "#fdb462", "#7fc97f", "#ef3b2c", "#662506", "#a6cee3", "#fb9a99", "#984ea3", "#ffff33")), ...
    )
}
```

```{r}
#| fig-height: 100
#| echo: false
country_order <- sw_data %>% summarize(income_pc_last = last(income_pc), .by = country) |> arrange(desc(income_pc_last)) |> pull(country)

sw_data %>%
  mutate(country = factor(country, country_order)) |>
    drop_na() |>
    select(country, year, `f(K)` = f, `g(K)` = g, `r(K)` = r) |>
    pivot_longer(-c(country, year)) |>
    ggplot(aes(x = as.integer(year), y = value, color = name)) +
    geom_hline(yintercept = 0, color = "darkgrey") +
    geom_line(linewidth = 1) +
    facet_wrap(vars(country),
               scales = "free",
               ncol = 2
    ) +
    theme_minimal(base_size = 14) +
    # scale_y_continuous(name = "Value", labels = scales::label_dollar(scale = 1/10^6, suffix = "B")) +
    theme(
      legend.position = "top",
      legend.title = element_blank(),
      axis.text.x = element_text(angle = 30),
      plot.margin = margin(l= 10, r = 15)
    ) +
    labs(
      title = NULL,
      caption = "Data from WID World",
      x = NULL,
      y = NULL
    ) +
    scale_colour_Publication() 
```

### Section 2: Yearly labor and capital shares of consumption in 68 countries in descending order of income per capita

```{r}
#| fig-height: 100
#| echo: false
sw_data %>%
  mutate(country = factor(country, country_order)) |>
    drop_na() |>
  mutate(`labor share` = (Pi/C), `capital share` = (C-Pi)/C) %>%
    select(country, year, `capital share`, `labor share`) |>
    pivot_longer(-c(country, year)) |>
    ggplot(aes(x = as.integer(year), y = value, color = fct_rev(factor(name)))) +
    geom_hline(yintercept = 0, color = "darkgrey") +
    geom_line(linewidth = 1) +
    facet_wrap(vars(country),
               scales = "free",
               ncol = 2
    ) +
    theme_minimal(base_size = 14) +
    # scale_y_continuous(name = "Value", labels = scales::label_dollar(scale = 1/10^6, suffix = "B")) +
    theme(
      legend.position = "top",
      legend.title = element_blank(),
      axis.text.x = element_text(angle = 30),
      plot.margin = margin(l= 10, r = 15)
    ) +
    labs(
      title = NULL,
      caption = "Data from WID World",
      x = NULL,
      y = NULL
    ) +
    scale_colour_Publication() 
```

